
package com.soap.ws.client.generated;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IRoutingService", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IRoutingService {


    /**
     * 
     * @param address
     * @return
     *     returns com.soap.ws.client.generated.Position
     */
    @WebMethod(operationName = "GetPosition", action = "http://tempuri.org/IRoutingService/GetPosition")
    @WebResult(name = "GetPositionResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetPosition", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetPosition")
    @ResponseWrapper(localName = "GetPositionResponse", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetPositionResponse")
    public Position getPosition(
        @WebParam(name = "address", targetNamespace = "http://tempuri.org/")
        String address);

    /**
     * 
     * @param userLatitude
     * @param userLongitude
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetClosestContract", action = "http://tempuri.org/IRoutingService/GetClosestContract")
    @WebResult(name = "GetClosestContractResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetClosestContract", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetClosestContract")
    @ResponseWrapper(localName = "GetClosestContractResponse", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetClosestContractResponse")
    public String getClosestContract(
        @WebParam(name = "userLatitude", targetNamespace = "http://tempuri.org/")
        Double userLatitude,
        @WebParam(name = "userLongitude", targetNamespace = "http://tempuri.org/")
        Double userLongitude);

    /**
     * 
     * @param userLatitude
     * @param userLongitude
     * @param numberOfStations
     * @param closestContract
     * @return
     *     returns com.soap.ws.client.generated.Station
     */
    @WebMethod(operationName = "GetClosestStations", action = "http://tempuri.org/IRoutingService/GetClosestStations")
    @WebResult(name = "GetClosestStationsResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetClosestStations", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetClosestStations")
    @ResponseWrapper(localName = "GetClosestStationsResponse", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetClosestStationsResponse")
    public Station getClosestStations(
        @WebParam(name = "userLatitude", targetNamespace = "http://tempuri.org/")
        Double userLatitude,
        @WebParam(name = "userLongitude", targetNamespace = "http://tempuri.org/")
        Double userLongitude,
        @WebParam(name = "numberOfStations", targetNamespace = "http://tempuri.org/")
        Integer numberOfStations,
        @WebParam(name = "closestContract", targetNamespace = "http://tempuri.org/")
        String closestContract);

    /**
     * 
     * @param startLat
     * @param endLat
     * @param typeRoute
     * @param startLon
     * @param endLon
     * @return
     *     returns com.soap.ws.client.generated.RouteResponse
     */
    @WebMethod(operationName = "GetRoute", action = "http://tempuri.org/IRoutingService/GetRoute")
    @WebResult(name = "GetRouteResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetRoute", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetRoute")
    @ResponseWrapper(localName = "GetRouteResponse", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetRouteResponse")
    public RouteResponse getRoute(
        @WebParam(name = "startLat", targetNamespace = "http://tempuri.org/")
        Double startLat,
        @WebParam(name = "startLon", targetNamespace = "http://tempuri.org/")
        Double startLon,
        @WebParam(name = "endLat", targetNamespace = "http://tempuri.org/")
        Double endLat,
        @WebParam(name = "endLon", targetNamespace = "http://tempuri.org/")
        Double endLon,
        @WebParam(name = "typeRoute", targetNamespace = "http://tempuri.org/")
        String typeRoute);

    /**
     * 
     * @param startAddress
     * @param endAddress
     * @return
     *     returns com.soap.ws.client.generated.CompleteRoute
     */
    @WebMethod(operationName = "GetCompleteRoute", action = "http://tempuri.org/IRoutingService/GetCompleteRoute")
    @WebResult(name = "GetCompleteRouteResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetCompleteRoute", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetCompleteRoute")
    @ResponseWrapper(localName = "GetCompleteRouteResponse", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.GetCompleteRouteResponse")
    public CompleteRoute getCompleteRoute(
        @WebParam(name = "startAddress", targetNamespace = "http://tempuri.org/")
        String startAddress,
        @WebParam(name = "endAddress", targetNamespace = "http://tempuri.org/")
        String endAddress);

    /**
     * 
     * @param contract
     * @param station
     * @param typeStation
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "CheckStationAvailable", action = "http://tempuri.org/IRoutingService/CheckStationAvailable")
    @WebResult(name = "CheckStationAvailableResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CheckStationAvailable", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.CheckStationAvailable")
    @ResponseWrapper(localName = "CheckStationAvailableResponse", targetNamespace = "http://tempuri.org/", className = "com.soap.ws.client.generated.CheckStationAvailableResponse")
    public Boolean checkStationAvailable(
        @WebParam(name = "contract", targetNamespace = "http://tempuri.org/")
        String contract,
        @WebParam(name = "station", targetNamespace = "http://tempuri.org/")
        Station station,
        @WebParam(name = "typeStation", targetNamespace = "http://tempuri.org/")
        String typeStation);

}
